version: "3.8"

services:
  app:
    build:
      context: ./docker/php
    container_name: pruebas_app
    restart: always
    working_dir: /var/www
    volumes:
      - .:/var/www
    depends_on:
      - postgres
    networks:
      - pruebas

  nginx:
    image: nginx:latest
    container_name: pruebas_nginx
    restart: always
    ports:
      - "80:80"
    volumes:
      - .:/var/www
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app
    networks:
      - pruebas

  postgres:
    image: postgres:16.8
    container_name: pruebas_postgres
    restart: always
    shm_size: 128mb
    environment:
      POSTGRES_USER: pruebas_user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: pruebas
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - pruebas

  adminer:
    image: adminer:latest
    container_name: pruebas_adminer
    restart: always
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: postgres
    depends_on:
      - postgres
    networks:
      - pruebas
  node:
    image: node:22-alpine
    container_name: pruebas_node
    working_dir: /var/www
    volumes:
      - .:/var/www
    command: sh -c "npm install && npm run dev"
    ports:
      - "5173:5173"
    networks:
      - pruebas

  composer:
    build:
      context: ./docker/php
    container_name: pruebas_composer
    working_dir: /var/www
    volumes:
      - .:/var/www
    entrypoint: ["composer"]
    networks:
      - pruebas

networks:
  pruebas:
    driver: bridge

volumes:
  postgres_data:
